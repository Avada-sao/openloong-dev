<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="walk__wbc__speed__test_8cpp" kind="file" language="C++">
    <compoundname>walk_wbc_speed_test.cpp</compoundname>
    <includes local="no">iostream</includes>
    <includes refid="useful__math_8h" local="yes">useful_math.h</includes>
    <includes refid="PVT__ctrl_8h" local="yes">PVT_ctrl.h</includes>
    <includes refid="pino__kin__dyn_8h" local="yes">pino_kin_dyn.h</includes>
    <includes refid="data__logger_8h" local="yes">data_logger.h</includes>
    <includes refid="wbc__priority_8h" local="yes">wbc_priority.h</includes>
    <includes refid="gait__scheduler_8h" local="yes">gait_scheduler.h</includes>
    <includes refid="foot__placement_8h" local="yes">foot_placement.h</includes>
    <includes refid="joystick__interpreter_8h" local="yes">joystick_interpreter.h</includes>
    <includes local="no">chrono</includes>
    <incdepgraph>
      <node id="32">
        <label>priority_tasks.h</label>
        <link refid="priority__tasks_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>iomanip</label>
      </node>
      <node id="27">
        <label>fmt/format.h</label>
      </node>
      <node id="8">
        <label>json/json.h</label>
      </node>
      <node id="21">
        <label>pinocchio/algorithm/crba.hpp</label>
      </node>
      <node id="19">
        <label>pinocchio/algorithm/joint-configuration.hpp</label>
      </node>
      <node id="14">
        <label>pino_kin_dyn.h</label>
        <link refid="pino__kin__dyn_8h_source"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>cmath</label>
      </node>
      <node id="28">
        <label>stdexcept</label>
      </node>
      <node id="23">
        <label>pinocchio/algorithm/center-of-mass.hpp</label>
      </node>
      <node id="9">
        <label>string</label>
      </node>
      <node id="30">
        <label>qpOASES.hpp</label>
      </node>
      <node id="12">
        <label>data_bus.h</label>
        <link refid="data__bus_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>fstream</label>
      </node>
      <node id="18">
        <label>pinocchio/algorithm/frames.hpp</label>
      </node>
      <node id="22">
        <label>pinocchio/algorithm/centroidal.hpp</label>
      </node>
      <node id="35">
        <label>foot_placement.h</label>
        <link refid="foot__placement_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>quill/Quill.h</label>
      </node>
      <node id="36">
        <label>joystick_interpreter.h</label>
        <link refid="joystick__interpreter_8h_source"/>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>Eigen/Dense</label>
      </node>
      <node id="34">
        <label>gait_scheduler.h</label>
        <link refid="gait__scheduler_8h_source"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>LPF_fst.h</label>
        <link refid="LPF__fst_8h_source"/>
      </node>
      <node id="5">
        <label>vector</label>
      </node>
      <node id="37">
        <label>ramp_trajectory.h</label>
        <link refid="ramp__trajectory_8h_source"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>PVT_ctrl.h</label>
        <link refid="PVT__ctrl_8h_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>utility</label>
      </node>
      <node id="29">
        <label>wbc_priority.h</label>
        <link refid="wbc__priority_8h_source"/>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>iostream</label>
      </node>
      <node id="24">
        <label>pinocchio/algorithm/aba.hpp</label>
      </node>
      <node id="16">
        <label>pinocchio/algorithm/jacobian.hpp</label>
      </node>
      <node id="17">
        <label>pinocchio/algorithm/kinematics.hpp</label>
      </node>
      <node id="1">
        <label>walk_wbc_speed_test.cpp</label>
        <link refid="walk__wbc__speed__test_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>pinocchio/algorithm/rnea.hpp</label>
      </node>
      <node id="38">
        <label>chrono</label>
      </node>
      <node id="25">
        <label>data_logger.h</label>
        <link refid="data__logger_8h_source"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>useful_math.h</label>
        <link refid="useful__math_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>pinocchio/parsers/urdf.hpp</label>
      </node>
      <node id="31">
        <label>algorithm</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="walk__wbc__speed__test_8cpp_1a217dbf8b442f20279ea00b898af96f52" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(int argc, const char **argv)</argsstring>
        <name>main</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>argv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>--------------<mdash/> sim Loop ------------<mdash/></para>
        </inbodydescription>
        <location file="demo/walk_wbc_speed_test.cpp" line="21" column="5" bodyfile="demo/walk_wbc_speed_test.cpp" bodystart="21" bodyend="241"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment">This<sp/>is<sp/>part<sp/>of<sp/>OpenLoong<sp/>Dynamics<sp/>Control,<sp/>an<sp/>open<sp/>project<sp/>for<sp/>the<sp/>control<sp/>of<sp/>biped<sp/>robot,</highlight></codeline>
<codeline lineno="3"><highlight class="comment">Copyright<sp/>(C)<sp/>2024<sp/>Humanoid<sp/>Robot<sp/>(Shanghai)<sp/>Co.,<sp/>Ltd,<sp/>under<sp/>Apache<sp/>2.0.</highlight></codeline>
<codeline lineno="4"><highlight class="comment">Feel<sp/>free<sp/>to<sp/>use<sp/>in<sp/>any<sp/>purpose,<sp/>and<sp/>cite<sp/>OpenLoong-Dynamics-Control<sp/>in<sp/>any<sp/>style,<sp/>to<sp/>contribute<sp/>to<sp/>the<sp/>advancement<sp/>of<sp/>the<sp/>community.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>&lt;https://atomgit.com/openloong/openloong-dyn-control.git&gt;</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>&lt;web@openloong.org.cn&gt;</highlight></codeline>
<codeline lineno="7"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;useful_math.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;PVT_ctrl.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pino_kin_dyn.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;data_logger.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;wbc_priority.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;gait_scheduler.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;foot_placement.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;joystick_interpreter.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;chrono&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>main<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>main(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**argv)<sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ini<sp/>classes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>timestep<sp/>=<sp/>0.001;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classPin__KinDyn" kindref="compound">Pin_KinDyn</ref><sp/>kinDynSolver(</highlight><highlight class="stringliteral">&quot;../models/AzureLoong.urdf&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>kinematics<sp/>and<sp/>dynamics<sp/>solver</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structDataBus" kindref="compound">DataBus</ref><sp/>RobotState(kinDynSolver.model_nv);<sp/></highlight><highlight class="comment">//<sp/>data<sp/>bus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classWBC__priority" kindref="compound">WBC_priority</ref><sp/>WBC_solv(kinDynSolver.model_nv,<sp/>18,<sp/>22,<sp/>0.7,<sp/>timestep);<sp/></highlight><highlight class="comment">//<sp/>WBC<sp/>solver</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classGaitScheduler" kindref="compound">GaitScheduler</ref><sp/>gaitScheduler(0.4,<sp/>timestep);<sp/></highlight><highlight class="comment">//<sp/>gait<sp/>scheduler</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classPVT__Ctr" kindref="compound">PVT_Ctr</ref><sp/>pvtCtr(timestep,<sp/></highlight><highlight class="stringliteral">&quot;../common/joint_ctrl_config.json&quot;</highlight><highlight class="normal">);</highlight><highlight class="comment">//<sp/>PVT<sp/>joint<sp/>control</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classFootPlacement" kindref="compound">FootPlacement</ref><sp/>footPlacement;<sp/></highlight><highlight class="comment">//<sp/>foot-placement<sp/>planner</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classJoyStickInterpreter" kindref="compound">JoyStickInterpreter</ref><sp/>jsInterp(timestep);<sp/></highlight><highlight class="comment">//<sp/>desired<sp/>baselink<sp/>velocity<sp/>generator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDataLogger" kindref="compound">DataLogger</ref><sp/>logger(</highlight><highlight class="stringliteral">&quot;../record/datalog.log&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>data<sp/>logger</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>variables<sp/>ini</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>stand_legLength<sp/>=<sp/>1.01;<sp/></highlight><highlight class="comment">//-0.95;<sp/>//<sp/>desired<sp/>baselink<sp/>height</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>foot_height<sp/>=<sp/>0.07;<sp/></highlight><highlight class="comment">//<sp/>distance<sp/>between<sp/>the<sp/>foot<sp/>ankel<sp/>joint<sp/>and<sp/>the<sp/>bottom</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>xv_des<sp/>=<sp/>0.7;<sp/><sp/></highlight><highlight class="comment">//<sp/>desired<sp/>velocity<sp/>in<sp/>x<sp/>direction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>RobotState.width_hips<sp/>=<sp/>0.229;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>footPlacement.kp_vx<sp/>=<sp/>0.03;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>footPlacement.kp_vy<sp/>=<sp/>0.03;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>footPlacement.kp_wz<sp/>=<sp/>0.03;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>footPlacement.stepHeight<sp/>=<sp/>0.2;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>footPlacement.legLength<sp/>=<sp/>stand_legLength;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//mju_copy(mj_data-&gt;qpos,<sp/>mj_model-&gt;key_qpos,<sp/>mj_model-&gt;nq*1);<sp/>//<sp/>set<sp/>ini<sp/>pos<sp/>in<sp/>Mujoco</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>model_nv<sp/>=<sp/>kinDynSolver.model_nv;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ini<sp/>position<sp/>and<sp/>posture<sp/>for<sp/>foot-end<sp/>and<sp/>hand</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;double&gt;<sp/>motors_pos_des(model_nv<sp/>-<sp/>6,<sp/>0);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;double&gt;<sp/>motors_pos_cur(model_nv<sp/>-<sp/>6,<sp/>0);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;double&gt;<sp/>motors_vel_des(model_nv<sp/>-<sp/>6,<sp/>0);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;double&gt;<sp/>motors_vel_cur(model_nv<sp/>-<sp/>6,<sp/>0);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;double&gt;<sp/>motors_tau_des(model_nv<sp/>-<sp/>6,<sp/>0);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;double&gt;<sp/>motors_tau_cur(model_nv<sp/>-<sp/>6,<sp/>0);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>fe_l_pos_L_des<sp/>=<sp/>{-0.018,<sp/>0.113,<sp/>-stand_legLength};</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>fe_r_pos_L_des<sp/>=<sp/>{-0.018,<sp/>-0.116,<sp/>-stand_legLength};</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>fe_l_eul_L_des<sp/>=<sp/>{-0.000,<sp/>-0.008,<sp/>-0.000};</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>fe_r_eul_L_des<sp/>=<sp/>{0.000,<sp/>-0.008,<sp/>0.000};</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Matrix3d<sp/>fe_l_rot_des<sp/>=<sp/>eul2Rot(fe_l_eul_L_des(0),<sp/>fe_l_eul_L_des(1),<sp/>fe_l_eul_L_des(2));</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Matrix3d<sp/>fe_r_rot_des<sp/>=<sp/>eul2Rot(fe_r_eul_L_des(0),<sp/>fe_r_eul_L_des(1),<sp/>fe_r_eul_L_des(2));</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>hd_l_pos_L_des&lt;&lt;-0.02,<sp/>0.32,<sp/>-0.159;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>hd_r_pos_L_des&lt;&lt;-0.02,<sp/>-0.32,<sp/>-0.159;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>hd_l_eul_L_des&lt;&lt;-1.7581,<sp/>0.2129,<sp/>2.9581;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>hd_r_eul_L_des&lt;&lt;1.7581,<sp/>0.21291,<sp/>-2.9581;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>hd_l_pos_L_des<sp/>=<sp/>{-0.02,<sp/>0.32,<sp/>-0.159};</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>hd_r_pos_L_des<sp/>=<sp/>{-0.02,<sp/>-0.32,<sp/>-0.159};</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>hd_l_eul_L_des<sp/>=<sp/>{-1.7581,<sp/>0.2129,<sp/>2.9581};</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector3d<sp/>hd_r_eul_L_des<sp/>=<sp/>{1.7581,<sp/>0.2129,<sp/>-2.9581};</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Matrix3d<sp/>hd_l_rot_des<sp/>=<sp/>eul2Rot(hd_l_eul_L_des(0),<sp/>hd_l_eul_L_des(1),<sp/>hd_l_eul_L_des(2));</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Matrix3d<sp/>hd_r_rot_des<sp/>=<sp/>eul2Rot(hd_r_eul_L_des(0),<sp/>hd_r_eul_L_des(1),<sp/>hd_r_eul_L_des(2));</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>resLeg<sp/>=<sp/>kinDynSolver.computeInK_Leg(fe_l_rot_des,<sp/>fe_l_pos_L_des,<sp/>fe_r_rot_des,<sp/>fe_r_pos_L_des);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>resHand<sp/>=<sp/>kinDynSolver.computeInK_Hand(hd_l_rot_des,<sp/>hd_l_pos_L_des,<sp/>hd_r_rot_des,<sp/>hd_r_pos_L_des);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::VectorXd<sp/>qIniDes<sp/>=<sp/>Eigen::VectorXd::Zero(model_nv<sp/>+<sp/>1,<sp/>1);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>qIniDes.block(7,<sp/>0,<sp/>model_nv<sp/>+<sp/>1<sp/>-<sp/>7,<sp/>1)<sp/>=<sp/>resLeg.jointPosRes<sp/>+<sp/>resHand.jointPosRes;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>WBC_solv.setQini(qIniDes);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>register<sp/>variable<sp/>name<sp/>for<sp/>data<sp/>logger</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>logger.addIterm(</highlight><highlight class="stringliteral">&quot;motors_pos_cur&quot;</highlight><highlight class="normal">,<sp/>model_nv<sp/>-<sp/>6);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>logger.addIterm(</highlight><highlight class="stringliteral">&quot;motors_vel_cur&quot;</highlight><highlight class="normal">,<sp/>model_nv<sp/>-<sp/>6);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>logger.addIterm(</highlight><highlight class="stringliteral">&quot;rpy&quot;</highlight><highlight class="normal">,<sp/>3);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>logger.addIterm(</highlight><highlight class="stringliteral">&quot;fL&quot;</highlight><highlight class="normal">,<sp/>3);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>logger.addIterm(</highlight><highlight class="stringliteral">&quot;fR&quot;</highlight><highlight class="normal">,<sp/>3);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>logger.addIterm(</highlight><highlight class="stringliteral">&quot;basePos&quot;</highlight><highlight class="normal">,<sp/>3);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>logger.addIterm(</highlight><highlight class="stringliteral">&quot;baseLinVel&quot;</highlight><highlight class="normal">,<sp/>3);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>logger.addIterm(</highlight><highlight class="stringliteral">&quot;baseAcc&quot;</highlight><highlight class="normal">,<sp/>3);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>logger.addIterm(</highlight><highlight class="stringliteral">&quot;baseAngVel&quot;</highlight><highlight class="normal">,<sp/>3);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>logger.addIterm(</highlight><highlight class="stringliteral">&quot;runTime&quot;</highlight><highlight class="normal">,<sp/>1);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>logger.finishItermAdding();</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;double&gt;<sp/>motor_pos<sp/>=<sp/>{0.4551,<sp/>1.1429,<sp/>1.8946,<sp/>0.8563,<sp/>1.2360,<sp/>0.0660,<sp/>-0.1173,<sp/>-0.4552,<sp/>-1.1427,</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-1.8945,<sp/>0.8563,<sp/>-1.2360,<sp/>0.0661,<sp/>0.1174,<sp/>-0.0000,<sp/>-0.0133,<sp/>0.0031,<sp/>0.0004,<sp/>0.0000,</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.0148,<sp/>0.0001,<sp/>0.3482,<sp/>-0.8127,<sp/>0.4295,<sp/>-0.0218,<sp/>-0.0186,<sp/>-0.0002,<sp/>0.3483,<sp/>-0.8129,</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.4297,<sp/>0.0177};</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;double&gt;<sp/>motor_vel<sp/>=<sp/>{0.0001,<sp/>-0.0000,<sp/>0.0000,<sp/>0.0000,<sp/>0.0000,<sp/>0.0000,<sp/>-0.0000,<sp/>-0.0001,<sp/>-0.0000,<sp/>-0.0000,</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.0000,<sp/>0.0000,<sp/>-0.0000,<sp/>-0.0000,<sp/>0.0000,<sp/>-0.0002,<sp/>-0.0000,<sp/>-0.0000,<sp/>-0.0000,<sp/>0.0000,</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-0.0001,<sp/>0.0000,<sp/>-0.0006,<sp/>0.0002,<sp/>0.0003,<sp/>-0.0009,<sp/>0.0002,<sp/>-0.0002,<sp/>-0.0002,</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-0.0001,<sp/>0.0008};</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>LoopNum=10000;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>start<sp/>=<sp/>std::chrono::high_resolution_clock::now();</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>end<sp/>=<sp/>std::chrono::high_resolution_clock::now();</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>LoopCount<sp/>=<sp/>0;<sp/>LoopCount<sp/>&lt;<sp/>LoopNum;<sp/>LoopCount++)<sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RobotState.motors_pos_cur=motor_pos;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RobotState.motors_vel_cur=motor_vel;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RobotState.rpy[0]=0.0069;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RobotState.rpy[1]=-0.0403;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RobotState.rpy[2]=0;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RobotState.fL[0]=0;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RobotState.fL[1]=0;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RobotState.fL[2]=0;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RobotState.fR[0]=0;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RobotState.fR[1]=0;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RobotState.fR[2]=0;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RobotState.basePos[0]=0.0039;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RobotState.basePos[1]=-0.0054;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RobotState.basePos[2]=1.0752;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RobotState.baseLinVel[0]=0;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RobotState.baseLinVel[1]=0;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RobotState.baseLinVel[2]=0;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RobotState.baseAcc[0]=0;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RobotState.baseAcc[1]=0;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RobotState.baseAcc[2]=0;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RobotState.baseAngVel[0]=0;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RobotState.baseAngVel[1]=0;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RobotState.baseAngVel[2]=0;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RobotState.updateQ();</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>update<sp/>kinematics<sp/>and<sp/>dynamics<sp/>info</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kinDynSolver.dataBusRead(RobotState);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kinDynSolver.computeJ_dJ();</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kinDynSolver.computeDyn();</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kinDynSolver.dataBusWrite(RobotState);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Enter<sp/>here<sp/>functions<sp/>to<sp/>send<sp/>actuator<sp/>commands,<sp/>like:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>arm-l:<sp/>0-6,<sp/>arm-r:<sp/>7-13,<sp/>head:<sp/>14,15,<sp/>waist:<sp/>16-18,<sp/>leg-l:<sp/>19-24,<sp/>leg-r:<sp/>25-30</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(LoopCount&gt;1)<sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jsInterp.setWzDesLPara(0,<sp/>1);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jsInterp.setVxDesLPara(xv_des,<sp/>2.0);<sp/></highlight><highlight class="comment">//<sp/>jsInterp.setVxDesLPara(0.9,1);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jsInterp.setIniPos(RobotState.q(0),<sp/>RobotState.q(1));</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jsInterp.setWzDesLPara(0,<sp/>1);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jsInterp.setVxDesLPara(0,<sp/>2.0);<sp/></highlight><highlight class="comment">//<sp/>jsInterp.setVxDesLPara(0.9,1);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jsInterp.step();</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RobotState.js_pos_des(2)<sp/>=<sp/>stand_legLength<sp/>+<sp/>foot_height;<sp/></highlight><highlight class="comment">//<sp/>pos<sp/>z<sp/>is<sp/>not<sp/>assigned<sp/>in<sp/>jyInterp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jsInterp.dataBusWrite(RobotState);<sp/></highlight><highlight class="comment">//<sp/>only<sp/>pos<sp/>x,<sp/>pos<sp/>y,<sp/>theta<sp/>z,<sp/>vel<sp/>x,<sp/>vel<sp/>y<sp/>,<sp/>omega<sp/>z<sp/>are<sp/>rewrote.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>gait<sp/>scheduler</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gaitScheduler.dataBusRead(RobotState);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(LoopCount&lt;1)</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gaitScheduler.step();</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gaitScheduler.dataBusWrite(RobotState);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>footPlacement.dataBusRead(RobotState);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>footPlacement.getSwingPos();</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>footPlacement.dataBusWrite(RobotState);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-------------<sp/>WBC<sp/>------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>WBC<sp/>input</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RobotState.Fr_ff<sp/>=<sp/>Eigen::VectorXd::Zero(12);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RobotState.des_ddq<sp/>=<sp/>Eigen::VectorXd::Zero(model_nv);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RobotState.des_dq<sp/>=<sp/>Eigen::VectorXd::Zero(model_nv);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RobotState.des_delta_q<sp/>=<sp/>Eigen::VectorXd::Zero(model_nv);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RobotState.base_rpy_des<sp/>&lt;&lt;<sp/>0,<sp/>0,<sp/>jsInterp.thetaZ;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RobotState.base_pos_des(2)<sp/>=<sp/>stand_legLength<sp/>+<sp/>foot_height;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RobotState.Fr_ff<sp/>&lt;&lt;<sp/>0,<sp/>0,<sp/>370,<sp/>0,<sp/>0,<sp/>0,</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>0,<sp/>370,<sp/>0,<sp/>0,<sp/>0;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>adjust<sp/>des_delata_q,<sp/>des_dq<sp/>and<sp/>des_ddq<sp/>to<sp/>achieve<sp/>forward<sp/>walking</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RobotState.des_delta_q.block&lt;2,<sp/>1&gt;(0,<sp/>0)<sp/>&lt;&lt;<sp/>jsInterp.vx_W<sp/>*<sp/>timestep,<sp/>jsInterp.vy_W<sp/>*<sp/>timestep;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RobotState.des_delta_q(5)<sp/>=<sp/>jsInterp.wz_L<sp/>*<sp/>timestep;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RobotState.des_dq.block&lt;2,<sp/>1&gt;(0,<sp/>0)<sp/>&lt;&lt;<sp/>jsInterp.vx_W,<sp/>jsInterp.vy_W;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RobotState.des_dq(5)<sp/>=<sp/>jsInterp.wz_L;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>5;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RobotState.des_ddq.block&lt;2,<sp/>1&gt;(0,<sp/>0)<sp/>&lt;&lt;<sp/>k<sp/>*<sp/>(jsInterp.vx_W<sp/>-<sp/>RobotState.dq(0)),<sp/>k<sp/>*<sp/>(jsInterp.vy_W<sp/>-</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RobotState.dq(1));</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RobotState.des_ddq(5)<sp/>=<sp/>k<sp/>*<sp/>(jsInterp.wz_L<sp/>-<sp/>RobotState.dq(5));</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>WBC<sp/>Calculation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WBC_solv.dataBusRead(RobotState);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WBC_solv.computeDdq(kinDynSolver);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WBC_solv.computeTau();</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WBC_solv.dataBusWrite(RobotState);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>get<sp/>the<sp/>final<sp/>joint<sp/>command</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::VectorXd<sp/>pos_des<sp/>=<sp/>kinDynSolver.integrateDIY(RobotState.q,<sp/>RobotState.wbc_delta_q_final);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RobotState.motors_pos_des<sp/>=<sp/>eigen2std(pos_des.block(7,<sp/>0,<sp/>model_nv<sp/>-<sp/>6,<sp/>1));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RobotState.motors_vel_des<sp/>=<sp/>eigen2std(RobotState.wbc_dq_final);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RobotState.motors_tor_des<sp/>=<sp/>eigen2std(RobotState.wbc_tauJointRes);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pvtCtr.dataBusRead(RobotState);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pvtCtr.setJointPD(100,<sp/>10,<sp/></highlight><highlight class="stringliteral">&quot;J_ankle_l_pitch&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pvtCtr.setJointPD(100,<sp/>10,<sp/></highlight><highlight class="stringliteral">&quot;J_ankle_l_roll&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pvtCtr.setJointPD(100,<sp/>10,<sp/></highlight><highlight class="stringliteral">&quot;J_ankle_r_pitch&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pvtCtr.setJointPD(100,<sp/>10,<sp/></highlight><highlight class="stringliteral">&quot;J_ankle_r_roll&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pvtCtr.setJointPD(1000,<sp/>100,<sp/></highlight><highlight class="stringliteral">&quot;J_knee_l_pitch&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pvtCtr.setJointPD(1000,<sp/>100,<sp/></highlight><highlight class="stringliteral">&quot;J_knee_r_pitch&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pvtCtr.calMotorsPVT();</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pvtCtr.dataBusWrite(RobotState);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end<sp/>=<sp/>std::chrono::high_resolution_clock::now();</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::chrono::duration&lt;double&gt;<sp/>duration<sp/>=<sp/>end<sp/>-<sp/>start;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start<sp/>=<sp/>end;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.startNewLine();</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.recItermData(</highlight><highlight class="stringliteral">&quot;motors_pos_cur&quot;</highlight><highlight class="normal">,<sp/>RobotState.motors_pos_cur);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.recItermData(</highlight><highlight class="stringliteral">&quot;motors_vel_cur&quot;</highlight><highlight class="normal">,<sp/>RobotState.motors_vel_cur);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.recItermData(</highlight><highlight class="stringliteral">&quot;rpy&quot;</highlight><highlight class="normal">,<sp/>RobotState.rpy);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.recItermData(</highlight><highlight class="stringliteral">&quot;fL&quot;</highlight><highlight class="normal">,<sp/>RobotState.fL);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.recItermData(</highlight><highlight class="stringliteral">&quot;fR&quot;</highlight><highlight class="normal">,<sp/>RobotState.fR);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.recItermData(</highlight><highlight class="stringliteral">&quot;basePos&quot;</highlight><highlight class="normal">,<sp/>RobotState.basePos);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.recItermData(</highlight><highlight class="stringliteral">&quot;baseLinVel&quot;</highlight><highlight class="normal">,<sp/>RobotState.baseLinVel);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.recItermData(</highlight><highlight class="stringliteral">&quot;baseAcc&quot;</highlight><highlight class="normal">,<sp/>RobotState.baseAcc);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.recItermData(</highlight><highlight class="stringliteral">&quot;baseAngVel&quot;</highlight><highlight class="normal">,<sp/>RobotState.baseAngVel);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.recItermData(</highlight><highlight class="stringliteral">&quot;runTime&quot;</highlight><highlight class="normal">,<sp/>duration.count());</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.finishLine();</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(&quot;rpyVal=[%.5f,<sp/>%.5f,<sp/>%.5f]\n&quot;,<sp/>RobotState.rpy[0],<sp/>RobotState.rpy[1],<sp/>RobotState.rpy[2]);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(&quot;gps=[%.5f,<sp/>%.5f,<sp/>%.5f]\n&quot;,<sp/>RobotState.basePos[0],<sp/>RobotState.basePos[1],<sp/>RobotState.basePos[2]);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(&quot;vel=[%.5f,<sp/>%.5f,<sp/>%.5f]\n&quot;,<sp/>RobotState.baseLinVel[0],<sp/>RobotState.baseLinVel[1],</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RobotState.baseLinVel[2]);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout&lt;&lt;<sp/>RobotState.wbc_tauJointRes.transpose()&lt;&lt;std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>std::chrono::duration&lt;double&gt;<sp/>duration<sp/>=<sp/>end<sp/>-<sp/>start;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;loop<sp/>time<sp/>recorded<sp/>to<sp/>the<sp/>last<sp/>column<sp/>of<sp/>record/datalog.log&quot;</highlight><highlight class="normal">&lt;&lt;std::endl;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;Execution<sp/>time:<sp/>&quot;<sp/>&lt;&lt;<sp/>duration.count()<sp/>&lt;&lt;<sp/>&quot;<sp/>seconds\n&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;Ava<sp/>Loop<sp/>time:<sp/>&quot;<sp/>&lt;&lt;<sp/>duration.count()/LoopNum*1000.<sp/>&lt;&lt;<sp/>&quot;<sp/>ms\n&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="241"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="demo/walk_wbc_speed_test.cpp"/>
  </compounddef>
</doxygen>
