<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="md_doc_sphinx_source_Tutorial_Develop" kind="page">
    <compoundname>md_doc_sphinx_source_Tutorial_Develop</compoundname>
    <title>Develop</title>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<sect1 id="md_doc_sphinx_source_Tutorial_Develop_1autotoc_md16">
<title>Developer&apos;s Guide</title>
<sect2 id="md_doc_sphinx_source_Tutorial_Develop_1autotoc_md17">
<title>Abbreviations</title>
<para><table rows="15" cols="2"><row>
<entry thead="yes"><para>prefix/suffix   </para>
</entry><entry thead="yes"><para>meaning    </para>
</entry></row>
<row>
<entry thead="no"><para>*_L, _W*   </para>
</entry><entry thead="no"><para>Local frame, World frame    </para>
</entry></row>
<row>
<entry thead="no"><para><emphasis>fe_</emphasis>   </para>
</entry><entry thead="no"><para>foot end    </para>
</entry></row>
<row>
<entry thead="no"><para>*_L, _l, _R, _r*   </para>
</entry><entry thead="no"><para>Left, Right    </para>
</entry></row>
<row>
<entry thead="no"><para><emphasis>swing,</emphasis> <emphasis>sw</emphasis>   </para>
</entry><entry thead="no"><para>swing leg    </para>
</entry></row>
<row>
<entry thead="no"><para><emphasis>stance,</emphasis> <emphasis>st</emphasis>   </para>
</entry><entry thead="no"><para>stance leg    </para>
</entry></row>
<row>
<entry thead="no"><para><emphasis>eul, rpy</emphasis>   </para>
</entry><entry thead="no"><para>angular position expressed by euler angle    </para>
</entry></row>
<row>
<entry thead="no"><para><emphasis>omega</emphasis>   </para>
</entry><entry thead="no"><para>angular velocity    </para>
</entry></row>
<row>
<entry thead="no"><para><emphasis>pos</emphasis>   </para>
</entry><entry thead="no"><para>linear position    </para>
</entry></row>
<row>
<entry thead="no"><para><emphasis>vel</emphasis>   </para>
</entry><entry thead="no"><para>linear velocity    </para>
</entry></row>
<row>
<entry thead="no"><para><emphasis>tor</emphasis>, tau*   </para>
</entry><entry thead="no"><para>torque at joint    </para>
</entry></row>
<row>
<entry thead="no"><para><emphasis>base</emphasis>   </para>
</entry><entry thead="no"><para>baselink    </para>
</entry></row>
<row>
<entry thead="no"><para>*_des*   </para>
</entry><entry thead="no"><para>desired value    </para>
</entry></row>
<row>
<entry thead="no"><para>*_cur*   </para>
</entry><entry thead="no"><para>current value    </para>
</entry></row>
<row>
<entry thead="no"><para>*_rot*   </para>
</entry><entry thead="no"><para>rotation matrix   </para>
</entry></row>
</table>
</para>
</sect2>
<sect2 id="md_doc_sphinx_source_Tutorial_Develop_1autotoc_md18">
<title>key control parameters</title>
<para><itemizedlist>
<listitem><para><ref refid="classMPC" kindref="compound">MPC</ref> parameters <programlisting><codeline><highlight class="normal"><sp/>{C++}</highlight></codeline>
<codeline><highlight class="normal">//MPC.h</highlight></codeline>
<codeline><highlight class="normal">void<sp/><sp/><sp/><sp/>set_weight(double<sp/>u_weight,<sp/>Eigen::MatrixXd<sp/>L_diag,<sp/>Eigen::MatrixXd<sp/>K_diag);</highlight></codeline>
<codeline><highlight class="normal">//*u_weight*<sp/>:<sp/>the<sp/>minimal<sp/>weight<sp/>of<sp/>control<sp/>input</highlight></codeline>
<codeline><highlight class="normal">//*L_diag*<sp/>:<sp/>the<sp/>weight<sp/>of<sp/>error<sp/>compared<sp/>to<sp/>desired<sp/>values,<sp/>following<sp/>the<sp/>order<sp/>(eul,<sp/>pos,<sp/>omega,<sp/>vel)</highlight></codeline>
<codeline><highlight class="normal">//*K_diag*<sp/>:<sp/>the<sp/>weight<sp/>of<sp/>control<sp/>input,<sp/>following<sp/>the<sp/>order<sp/>(fl,<sp/>tl,<sp/>fr,<sp/>tr)</highlight></codeline>
</programlisting></para>
</listitem><listitem><para>WBC priority <programlisting><codeline><highlight class="normal"><sp/>{C++}</highlight></codeline>
<codeline><highlight class="normal">//WBC_QP.cpp</highlight></codeline>
<codeline><highlight class="normal">std::vector&lt;std::string<sp/>taskOrder;</highlight></codeline>
<codeline><highlight class="normal">taskOrder.emplace_back(&quot;RedundantJoints&quot;);</highlight></codeline>
<codeline><highlight class="normal">taskOrder.emplace_back(&quot;static_Contact&quot;);</highlight></codeline>
<codeline><highlight class="normal">taskOrder.emplace_back(&quot;Roll_Pitch_Yaw_Pz&quot;);</highlight></codeline>
<codeline><highlight class="normal">taskOrder.emplace_back(&quot;PxPy&quot;);</highlight></codeline>
<codeline><highlight class="normal">taskOrder.emplace_back(&quot;SwingLeg&quot;);</highlight></codeline>
<codeline><highlight class="normal">taskOrder.emplace_back(&quot;HandTrack&quot;);</highlight></codeline>
<codeline><highlight class="normal">//<sp/>add<sp/>task<sp/>or<sp/>adjust<sp/>the<sp/>priority<sp/>here</highlight></codeline>
</programlisting></para>
</listitem><listitem><para>WBC weight <programlisting><codeline><highlight class="normal"><sp/>{C++}</highlight></codeline>
<codeline><highlight class="normal">//PriorityTasks.h</highlight></codeline>
<codeline><highlight class="normal">Eigen::MatrixXd<sp/>Kp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//weight<sp/>of<sp/>position<sp/>error</highlight></codeline>
<codeline><highlight class="normal">Eigen::MatrixXd<sp/>Kd;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//weight<sp/>of<sp/>velocity<sp/>eror</highlight></codeline>
<codeline><highlight class="normal">//WBC_QP.h</highlight></codeline>
<codeline><highlight class="normal">Eigen::MatrixXd<sp/>Q1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//weight<sp/>of<sp/>the<sp/>contact<sp/>force<sp/>error<sp/>compared<sp/>to<sp/>desired,<sp/>following<sp/>the<sp/>order<sp/>(fl,<sp/>tl,<sp/>fr,<sp/>tr)</highlight></codeline>
<codeline><highlight class="normal">Eigen::MatrixXd<sp/>Q2;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//weight<sp/>of<sp/>the<sp/>acceleration<sp/>tracking<sp/>error</highlight></codeline>
</programlisting></para>
</listitem><listitem><para>Swing leg trajectory <programlisting><codeline><highlight class="normal"><sp/>{C++}</highlight></codeline>
<codeline><highlight class="normal">//FootPlacement.h</highlight></codeline>
<codeline><highlight class="normal">double<sp/>kp_vx;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//x-direction<sp/>footplacement<sp/>parameter</highlight></codeline>
<codeline><highlight class="normal">double<sp/>kp_vy;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//y-direction<sp/>footplacement<sp/>parameter</highlight></codeline>
<codeline><highlight class="normal">double<sp/>kp_wz;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//z-direction<sp/>posture<sp/>parameter</highlight></codeline>
<codeline><highlight class="normal">double<sp/>stepHeight;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//the<sp/>maximal<sp/>step<sp/>height</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//FootPlacement.cpp</highlight></codeline>
<codeline><highlight class="normal">double<sp/><sp/><sp/><sp/>FootPlacement::Trajectory(double<sp/>phase,<sp/>double<sp/>des1,<sp/>double<sp/>des2);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//z-direction<sp/>posture<sp/>trajectory</highlight></codeline>
<codeline><highlight class="normal">//phase：the<sp/>phase<sp/>when<sp/>reaching<sp/>the<sp/>highest</highlight></codeline>
<codeline><highlight class="normal">//des1：the<sp/>highest<sp/>position<sp/>along<sp/>the<sp/>trajectory</highlight></codeline>
<codeline><highlight class="normal">//des2：the<sp/>final<sp/>position<sp/>of<sp/>the<sp/>trajectory</highlight></codeline>
</programlisting></para>
</listitem><listitem><para>Gait control <programlisting><codeline><highlight class="normal"><sp/>{C++}</highlight></codeline>
<codeline><highlight class="normal">//GaitScheduler.h</highlight></codeline>
<codeline><highlight class="normal">double<sp/>tSwing;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//the<sp/>time<sp/>of<sp/>one<sp/>step</highlight></codeline>
<codeline><highlight class="normal">double<sp/>FzThrehold;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//the<sp/>maximal<sp/>force<sp/>when<sp/>touching<sp/>the<sp/>ground</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//GaitScheduler.cpp</highlight></codeline>
<codeline><highlight class="normal">DataBus::LegState<sp/>legState=DataBus::RSt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//the<sp/>first<sp/>step<sp/>state</highlight></codeline>
</programlisting></para>
</listitem><listitem><para>Joint parameter <programlisting filename=".JavaScript"><codeline><highlight class="normal">//JointCtrConfig.json</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>&quot;Joint-ankel-l-pitch&quot;<sp/>:<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&quot;PVT_LPF_Fc&quot;<sp/>:<sp/>20,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&quot;kd&quot;<sp/>:<sp/>5.0,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&quot;kp&quot;<sp/>:<sp/>50.0,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&quot;maxPos&quot;<sp/>:<sp/>0.61087,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&quot;maxSpeed&quot;<sp/>:<sp/>48.8,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&quot;maxTorque&quot;<sp/>:<sp/>58.5,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&quot;minPos&quot;<sp/>:<sp/>-0.43644</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
</programlisting></para>
</listitem></itemizedlist>
</para>
</sect2>
<sect2 id="md_doc_sphinx_source_Tutorial_Develop_1autotoc_md19">
<title>Instructions to replace robot model</title>
<sect3 id="md_doc_sphinx_source_Tutorial_Develop_1autotoc_md20">
<title>model file</title>
<para><bold>1. xml file preparation</bold></para>
<para>prepare the urdf (.urdf) file and mesh file (.stl) of the robot for adding the mujoco compiling tags <programlisting filename=".XML"><codeline><highlight class="normal">&lt;</highlight><highlight class="keywordtype">mujoco</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal">&lt;</highlight><highlight class="keywordtype">compiler</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">meshdir</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;meshes/&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">balanceinertia</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;true&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">discardvisual</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;false&quot;</highlight><highlight class="normal"><sp/>/&gt;</highlight></codeline>
<codeline><highlight class="normal">&lt;/</highlight><highlight class="keywordtype">mujoco</highlight><highlight class="normal">&gt;</highlight></codeline>
</programlisting></para>
<para>change the working directory to <computeroutput>mujoco-3.x.x/bin</computeroutput>, run the command: <programlisting filename=".Bash"><codeline><highlight class="normal">./simulate</highlight></codeline>
</programlisting></para>
<para>drag the urdf file into the simulation interface, after the model displaying correctly save the xml file. You should note the path of the mesh files.</para>
<para>You can also reference the Mujoco <ulink url="https://mujoco.readthedocs.io/en/stable/XMLreference.html">documentation</ulink> to set tags like <computeroutput>compiler</computeroutput>, <computeroutput>option</computeroutput> or <computeroutput>asset</computeroutput> to customize <computeroutput>body</computeroutput>, <computeroutput>actuator</computeroutput> and <computeroutput>sensor</computeroutput> etc.</para>
<para><table rows="4" cols="2"><row>
<entry thead="yes"><para>parent label   </para>
</entry><entry thead="yes"><para>child label    </para>
</entry></row>
<row>
<entry thead="no"><para><emphasis>worldbody</emphasis>   </para>
</entry><entry thead="no"><para>define light, camera, floor and robot(inertial, joint, freejoint, geom, site, camera, light etc)    </para>
</entry></row>
<row>
<entry thead="no"><para><emphasis>actuator</emphasis>   </para>
</entry><entry thead="no"><para>define actuators (motor, position, velocity etc)    </para>
</entry></row>
<row>
<entry thead="no"><para><emphasis>sensor</emphasis>   </para>
</entry><entry thead="no"><para>define the sensors and adjust the sensors parameters like noises   </para>
</entry></row>
</table>
</para>
<para><bold>2. replace the model</bold></para>
<para>Take the &quot;AzureDragon robot&quot; as an example: under <emphasis>base_link</emphasis>, there are four tandem connections in parallel: the head <emphasis>Link_head_</emphasis>, the waist <emphasis>Link_waist_</emphasis>, the left arm <emphasis>Link</emphasis>_arm_l_, and the right arm <emphasis>Link_arm_r_</emphasis> branches. The left arm and right arm branches each have 7 degrees of freedom and the head branch has 2 degrees of freedom. The waist branch has 3 degrees of freedom including pitch*Link_waist_pitch*, roll*Link_waist_roll*, yaw*Link_waist_yaw*, etc., and the left leg and right leg branches are connected in parallel, and each leg is connected with three hip joints*Link_*hip* and one knee joint*Link_knee_* in turn, two ankle joints <emphasis>Link_ankel_</emphasis> and in total 6 degrees of freedom. This completes the configuration of all the 31 degrees of freedom.</para>
<para>You can reference this configuration and try to customize your configuration.</para>
<para><programlisting filename=".xml"><codeline><highlight class="normal">&lt;</highlight><highlight class="keywordtype">worldbody</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">body</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">name</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;base_link&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">pos</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;x<sp/>x<sp/>x&quot;</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">freejoint</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">name</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;float_base&quot;</highlight><highlight class="normal"><sp/>/&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">body</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">name</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;body1&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">pos</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;x<sp/>x<sp/>x&quot;</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">inertial</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">pos</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;x<sp/>x<sp/>x&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">quat</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;x<sp/>x<sp/>x&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">mass</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;x&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">diaginertia</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;x<sp/>x<sp/>x&quot;</highlight><highlight class="normal">/&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">joint</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">name</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;joint1&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">pos</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;0<sp/>0<sp/>0&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">axis</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;1<sp/>0<sp/>0&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">limited</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;true&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">range</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;x<sp/>x&quot;</highlight><highlight class="normal">/&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">geom</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">type</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;mesh&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">contype</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">conaffinity</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">group</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">density</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">rgba</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;x<sp/>x<sp/>x<sp/>1&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">mesh</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;body1&quot;</highlight><highlight class="normal">/&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">geom</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">type</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;mesh&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">rgba</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;x<sp/>x<sp/>x<sp/>1&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">mesh</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;body1&quot;</highlight><highlight class="normal">/&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">body</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">name</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;body2&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">pos</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;x<sp/>x<sp/>x&quot;</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>...</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">joint</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">name</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;joint2&quot;</highlight><highlight class="normal"><sp/>.../&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>...</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;/</highlight><highlight class="keywordtype">body</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;/</highlight><highlight class="keywordtype">body</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">body</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">name</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;body3&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">pos</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;x<sp/>x<sp/>x&quot;</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>...</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">joint</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">name</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;joint3&quot;</highlight><highlight class="normal"><sp/>.../&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>...</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;/</highlight><highlight class="keywordtype">body</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;/</highlight><highlight class="keywordtype">body</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal">&lt;/</highlight><highlight class="keywordtype">worldbody</highlight><highlight class="normal">&gt;</highlight></codeline>
</programlisting></para>
<para>In this case, two branches are connected in parallel under <emphasis>base_link</emphasis>, one branch consists of <emphasis>body1</emphasis> and <emphasis>body2</emphasis> in series, and the other branch consists of <emphasis>body3</emphasis>. If the robot has a floating base, add the free joint <emphasis>freejoint</emphasis> under <emphasis>body</emphasis> named <emphasis>base_link</emphasis> above. If the robot is a fixed base, remove the <emphasis>freejoint</emphasis> . Optionally, <emphasis>freejoint</emphasis> can be masked out during the model configuration phase, if desired.</para>
<para>This project sets actuator for each of the 31 joints.</para>
<para><programlisting filename=".XML"><codeline><highlight class="normal">&lt;</highlight><highlight class="keywordtype">actuator</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">motor</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">name</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;motor1&quot;</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">joint</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;joint1&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">gear</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;x&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">ctrllimited</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;true&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">ctrlrange</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;x<sp/>x&quot;</highlight><highlight class="normal">/&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>...</highlight></codeline>
<codeline><highlight class="normal">&lt;/</highlight><highlight class="keywordtype">actuator</highlight><highlight class="normal">&gt;</highlight></codeline>
</programlisting></para>
<para>The user can define the corresponding actuators at the active joints depending on the degrees of freedom of the robot.</para>
<para>The project is configured with sensors such as quaternion <emphasis>framequat</emphasis>, velocimeter <emphasis>velocimeter</emphasis>, angular velocimeter <emphasis>gyro</emphasis>, accelerometer <emphasis>accelerometer</emphasis>, which are mounted at the <emphasis>site</emphasis> already defined in the <emphasis>body</emphasis> tag, and can be added according to the needs of <emphasis>touch</emphasis>, <emphasis>force</emphasis>, <emphasis>torque</emphasis>, <emphasis>jointpos</emphasis>, <emphasis>jointvel</emphasis>, <emphasis>actuatorfrc</emphasis>, <emphasis>actuatorfrc</emphasis>. force*, <emphasis>torque</emphasis>, <emphasis>jointpos</emphasis>, <emphasis>jointvel</emphasis>, <emphasis>actuatorfrc</emphasis> and other sensors can be added as required.</para>
<para><programlisting filename=".XML"><codeline><highlight class="normal">&lt;</highlight><highlight class="keywordtype">sensor</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">framequat</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">name</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;xx&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">objtype</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;site&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">objname</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;imu&quot;</highlight><highlight class="normal"><sp/>/&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">velocimeter</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">name</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;xx&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">site</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;imu&quot;</highlight><highlight class="normal"><sp/>/&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">gyro</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">name</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;xx&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">site</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;imu&quot;</highlight><highlight class="normal"><sp/>/&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">accelerometer</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">name</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;xx&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">site</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;imu&quot;</highlight><highlight class="normal"><sp/>/&gt;</highlight></codeline>
<codeline><highlight class="normal">&lt;/</highlight><highlight class="keywordtype">sensor</highlight><highlight class="normal">&gt;</highlight></codeline>
</programlisting> In addition to the degree of freedom configuration, actuator configuration, sensor configuration, other more specific parameter modifications can refer to the Mojoco official <ulink url="https://mujoco.readthedocs.io/en/stable/XMLreference.html">documentation</ulink>.</para>
</sect3>
<sect3 id="md_doc_sphinx_source_Tutorial_Develop_1autotoc_md21">
<title>Control code and Mujoco interface</title>
<para>Use fuction <computeroutput>mj_loadXML</computeroutput>, <computeroutput>mj_makeData</computeroutput>to get <computeroutput>mjModel</computeroutput>, <computeroutput>mjData</computeroutput> struct. You can reference the <ulink url="https://mujoco.readthedocs.io/en/stable/XMLreference.html">documentation</ulink> for more details of <computeroutput>mjModel</computeroutput>, <computeroutput>mjData</computeroutput>, <computeroutput>mjOption</computeroutput>. <programlisting><codeline><highlight class="normal"><sp/>{C++}</highlight></codeline>
<codeline><highlight class="normal">mjModel*<sp/>mj_model<sp/>=<sp/>mj_loadXML(&quot;../Models/xxx.xml&quot;,<sp/>0,<sp/>error,<sp/>1000);</highlight></codeline>
<codeline><highlight class="normal">mjData*<sp/>mj_data<sp/>=<sp/>mj_makeData(mj_model);</highlight></codeline>
</programlisting></para>
<para><computeroutput>mj_model-&gt;nv</computeroutput> is the dimension of generalized velocity coordinate, i.e. the linear velocity, angular velocity of the floating base, and the velocity of the 31 joints of the rotational type. The variables related to the degrees of freedom in the program framework of the project are corresponding to <computeroutput>mj_model-&gt;nv-6</computeroutput>, and the dynamics library will automatically get the dimensions of the degrees of freedom of the robot according to the URDF, where all the dimension information are defined. Thus users don&apos;t have to modify it in the program manually.</para>
<para>As the access to the addresses of <emphasis>body</emphasis>, <emphasis>joint</emphasis>, <emphasis>motor</emphasis> and other components of this project relies on querying the name string and locking the address, when a component is modified, it will not affect the data reading and writing of other <emphasis>body</emphasis>, <emphasis>joint</emphasis>, and provide convenience for modifying the model compared to the direct indexing number. When modifying the control parameters of a certain degree of freedom in the model, you only need to modify the <computeroutput>JointName</computeroutput> of <emphasis>MJ_Interface.h</emphasis>, the <computeroutput>motorName</computeroutput> of <emphasis>Pin_KinDyn.h</emphasis>, the <computeroutput>motorName</computeroutput> of <emphasis>PVT_Ctr.h</emphasis>, and the variables corresponding to the name of a certain degree of freedom in the <emphasis>JointCtrConfig.json</emphasis> file. For example, to modify the stiffness of <computeroutput>J_waist_pitch</computeroutput>, you need to modify <computeroutput>J_waist_pitch</computeroutput> and the corresponding PD parameter in <emphasis>JointCtrConfig.json</emphasis>, and the name of <computeroutput>J_waist_pitch</computeroutput> corresponds to the <emphasis>joint name</emphasis>, <emphasis>motor name</emphasis> in the xml file.</para>
<para>The sensor data address is also accessed by querying the name string to find the address, adding or deleting sensors can be done by modifying the corresponding sensor name in <emphasis>MJ_Interface.h</emphasis>. </para>
</sect3>
</sect2>
</sect1>
    </detaileddescription>
    <location file="doc/sphinx/source/Tutorial/Develop.md"/>
  </compounddef>
</doxygen>
