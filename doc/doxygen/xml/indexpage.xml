<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="indexpage" kind="page">
    <compoundname>index</compoundname>
    <title>Humanoid Motion Control Framework based on MPC and WBC</title>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><anchor id="index_1md_doc_mainpage"/> Welcome to OpenLoong Dynamics Control Project&apos;s documentation!</para>
<para>OpenLoong Dynamics Control Project is an open-source project led by Humanoid Robot (Shanghai) Co., Ltd, Shanghai Humanoid Robot Manufacturing Innovation Center and OpenAtom Foundation.</para>
<para>This project provides a MPC-WBC based control framework based on the &quot;AzureLoong&quot; robot model in Shanghai Humanoid Robotics Innovation Center, which runs on Mujoco and shows three examples including walking, jumping and blindly stepping over obstales. <ulink url="http://aa.com">Project Homepage</ulink></para>
<sect1 id="index_1autotoc_md1">
<title>Attribute</title>
<para><bold>Easy to Deploy</bold>: This project provides a comprehensive solution for humanoid control. The code is self-contained so that users can easily configure their working environment and run without installing other dependencies to simplify the deploying process.</para>
<para><bold>Easy to Understand</bold>: The humanoid control framework structure adopts a hierarchical modular design, improving the maintainability and expandability of the system. The design draws clear boundaries for all the modules of the system in terms of logic and function, which provides a more friendly environment for secondary development and enables the developers to customize and expand the functions more easily.</para>
<para><bold>Easy to Develop</bold>: The code structure is simple, following the code design principle of module encapsulation for function, applying bus for data interaction between modules, reducing encapsulation redundancy, and helping to reduce code complexity; algorithm implementation adopts the simple logic of &quot;read-calculate-write&quot;, which improves the readability of the code.</para>
<para><image type="html" name="figure1.png" alt="im" inline="yes"></image>
</para>
</sect1>
<sect1 id="index_1autotoc_md2">
<title>User Manual</title>
<sect2 id="index_1autotoc_md3">
<title>Setup the environment</title>
<sect3 id="index_1autotoc_md4">
<title>suggested platform</title>
<para><itemizedlist>
<listitem><para>operate sysem: Ubuntu 22.04.4 LTS</para>
</listitem><listitem><para>compile: GCC 11.4.0 </para>
</listitem></itemizedlist>
</para>
</sect3>
<sect3 id="index_1autotoc_md5">
<title>install dependencies</title>
<para>This repository simulates the &quot;AzureLoong&quot; humanoid robot. Some dependencies including mujoco, pinocchio, eigen, quill, GLFW, jsoncpp are already contained in the code, but the simulation still needs openGL, which can be installed by executing the following instruction: <programlisting filename=".shell"><codeline><highlight class="normal">sudo<sp/>apt<sp/>install<sp/>libglu1-mesa-dev<sp/>freeglut3-dev</highlight></codeline>
</programlisting> </para>
</sect3>
</sect2>
<sect2 id="index_1autotoc_md6">
<title>Code Fetch and Compilation</title>
<para>The code can be downloaded in gitee or you can clone the repository using git <programlisting filename=".shell"><codeline><highlight class="normal">#<sp/>Clone</highlight></codeline>
<codeline><highlight class="normal">git<sp/>clone<sp/>https://atomgit.com/openloong/openloong-dyn-control.git</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#<sp/>Build</highlight></codeline>
<codeline><highlight class="normal">cd<sp/>openloong-dyn-control</highlight></codeline>
<codeline><highlight class="normal">mkdir<sp/>build</highlight></codeline>
<codeline><highlight class="normal">cd<sp/>build</highlight></codeline>
<codeline><highlight class="normal">cmake<sp/>..</highlight></codeline>
<codeline><highlight class="normal">make</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#<sp/>mujoco<sp/>simulation</highlight></codeline>
<codeline><highlight class="normal">./Walk_mpc_wbc<sp/>#or<sp/>./Walk_wbc<sp/>or<sp/>./Jump_mpc</highlight></codeline>
</programlisting></para>
</sect2>
<sect2 id="index_1autotoc_md7">
<title>Code Description</title>
<para><ulink url="http://cc.com">This</ulink> is the API documentation for the code.</para>
<sect3 id="index_1autotoc_md8">
<title>Abbreviations</title>
<para><table rows="15" cols="2"><row>
<entry thead="yes"><para>prefix/suffix   </para>
</entry><entry thead="yes"><para>meaning    </para>
</entry></row>
<row>
<entry thead="no"><para><emphasis>L</emphasis>, <emphasis>W</emphasis>   </para>
</entry><entry thead="no"><para>local frame, world frame    </para>
</entry></row>
<row>
<entry thead="no"><para><emphasis>fe</emphasis>   </para>
</entry><entry thead="no"><para>foot end    </para>
</entry></row>
<row>
<entry thead="no"><para><emphasis>L</emphasis>, <emphasis>l</emphasis>, <emphasis>R</emphasis>, <emphasis>r</emphasis>   </para>
</entry><entry thead="no"><para>left, right    </para>
</entry></row>
<row>
<entry thead="no"><para><emphasis>swing,</emphasis> <emphasis>sw</emphasis>   </para>
</entry><entry thead="no"><para>swing leg    </para>
</entry></row>
<row>
<entry thead="no"><para><emphasis>stance</emphasis>, <emphasis>st</emphasis>   </para>
</entry><entry thead="no"><para>stance leg    </para>
</entry></row>
<row>
<entry thead="no"><para><emphasis>eul</emphasis>, <emphasis>rpy</emphasis>   </para>
</entry><entry thead="no"><para>angular position expressed by euler angle    </para>
</entry></row>
<row>
<entry thead="no"><para><emphasis>omega</emphasis>   </para>
</entry><entry thead="no"><para>angular velocity    </para>
</entry></row>
<row>
<entry thead="no"><para><emphasis>pos</emphasis>   </para>
</entry><entry thead="no"><para>linear position    </para>
</entry></row>
<row>
<entry thead="no"><para><emphasis>vel</emphasis>   </para>
</entry><entry thead="no"><para>linear velocity    </para>
</entry></row>
<row>
<entry thead="no"><para><emphasis>tor</emphasis>, <emphasis>tau</emphasis>   </para>
</entry><entry thead="no"><para>torque at joint    </para>
</entry></row>
<row>
<entry thead="no"><para><emphasis>base</emphasis>   </para>
</entry><entry thead="no"><para>baselink    </para>
</entry></row>
<row>
<entry thead="no"><para><emphasis>des</emphasis>   </para>
</entry><entry thead="no"><para>desired value    </para>
</entry></row>
<row>
<entry thead="no"><para><emphasis>cur</emphasis>   </para>
</entry><entry thead="no"><para>current value    </para>
</entry></row>
<row>
<entry thead="no"><para><emphasis>rot</emphasis>   </para>
</entry><entry thead="no"><para>rotation matrix   </para>
</entry></row>
</table>
</para>
</sect3>
</sect2>
<sect2 id="index_1autotoc_md9">
<title>Developer&apos;s Guide</title>
<sect3 id="index_1autotoc_md10">
<title>key control parameters</title>
<para><itemizedlist>
<listitem><para><ref refid="classMPC" kindref="compound">MPC</ref> parameters <programlisting filename=".C"><codeline><highlight class="comment">//MPC.h</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>set_weight(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>u_weight,<sp/>Eigen::MatrixXd<sp/>L_diag,<sp/>Eigen::MatrixXd<sp/>K_diag);</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//*u_weight*<sp/>:<sp/>the<sp/>minimal<sp/>weight<sp/>of<sp/>control<sp/>input</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//*L_diag*<sp/>:<sp/>the<sp/>weight<sp/>of<sp/>error<sp/>compared<sp/>to<sp/>desired<sp/>values,<sp/>following<sp/>the<sp/>order<sp/>(eul,<sp/>pos,<sp/>omega,<sp/>vel)</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//*K_diag*<sp/>:<sp/>the<sp/>weight<sp/>of<sp/>control<sp/>input,<sp/>following<sp/>the<sp/>order<sp/>(fl,<sp/>tl,<sp/>fr,<sp/>tr)</highlight></codeline>
</programlisting></para>
</listitem><listitem><para>WBC priority <programlisting filename=".C"><codeline><highlight class="comment">//WBC_QP.cpp</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">std::vector&lt;std::string<sp/>taskOrder;</highlight></codeline>
<codeline><highlight class="normal">taskOrder.emplace_back(</highlight><highlight class="stringliteral">&quot;RedundantJoints&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">taskOrder.emplace_back(</highlight><highlight class="stringliteral">&quot;static_Contact&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">taskOrder.emplace_back(</highlight><highlight class="stringliteral">&quot;Roll_Pitch_Yaw_Pz&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">taskOrder.emplace_back(</highlight><highlight class="stringliteral">&quot;PxPy&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">taskOrder.emplace_back(</highlight><highlight class="stringliteral">&quot;SwingLeg&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">taskOrder.emplace_back(</highlight><highlight class="stringliteral">&quot;HandTrack&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>add<sp/>task<sp/>or<sp/>adjust<sp/>the<sp/>priority<sp/>here</highlight></codeline>
</programlisting></para>
</listitem><listitem><para>WBC weight <programlisting filename=".C"><codeline><highlight class="comment">//PriorityTasks.h</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">Eigen::MatrixXd<sp/>Kp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//weight<sp/>of<sp/>position<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">Eigen::MatrixXd<sp/>Kd;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//weight<sp/>of<sp/>velocity<sp/>eror</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//WBC_QP.h</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">Eigen::MatrixXd<sp/>Q1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//weight<sp/>of<sp/>the<sp/>contact<sp/>force<sp/>error<sp/>compared<sp/>to<sp/>desired,<sp/>following<sp/>the<sp/>order<sp/>(fl,<sp/>tl,<sp/>fr,<sp/>tr)</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">Eigen::MatrixXd<sp/>Q2;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//weight<sp/>of<sp/>the<sp/>acceleration<sp/>tracking<sp/>error</highlight></codeline>
</programlisting></para>
</listitem><listitem><para>Swing leg trajectory <programlisting filename=".C"><codeline><highlight class="comment">//FootPlacement.h</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>kp_vx;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//x-direction<sp/>footplacement<sp/>parameter</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>kp_vy;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//y-direction<sp/>footplacement<sp/>parameter</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>kp_wz;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//z-direction<sp/>posture<sp/>parameter</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>stepHeight;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//the<sp/>maximal<sp/>step<sp/>height</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//FootPlacement.cpp</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>FootPlacement::Trajectory(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>phase,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>des1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>des2);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//z-direction<sp/>posture<sp/>trajectory</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//phase：the<sp/>phase<sp/>when<sp/>reaching<sp/>the<sp/>highest</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//des1：the<sp/>highest<sp/>position<sp/>along<sp/>the<sp/>trajectory</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//des2：the<sp/>final<sp/>position<sp/>of<sp/>the<sp/>trajectory</highlight></codeline>
</programlisting></para>
</listitem><listitem><para>Gait control <programlisting filename=".C"><codeline><highlight class="comment">//GaitScheduler.h</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tSwing;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//the<sp/>time<sp/>of<sp/>one<sp/>step</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>FzThrehold;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//the<sp/>maximal<sp/>force<sp/>when<sp/>touching<sp/>the<sp/>ground</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//GaitScheduler.cpp</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">DataBus::LegState<sp/>legState=DataBus::RSt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//the<sp/>first<sp/>step<sp/>state</highlight></codeline>
</programlisting></para>
</listitem><listitem><para>Joint parameter <programlisting filename=".C"><codeline><highlight class="comment">//JointCtrConfig.json</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Joint-ankle-l-pitch&quot;</highlight><highlight class="normal"><sp/>:<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;PVT_LPF_Fc&quot;</highlight><highlight class="normal"><sp/>:<sp/>20,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;kd&quot;</highlight><highlight class="normal"><sp/>:<sp/>5.0,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;kp&quot;</highlight><highlight class="normal"><sp/>:<sp/>50.0,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;maxPos&quot;</highlight><highlight class="normal"><sp/>:<sp/>0.61087,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;maxSpeed&quot;</highlight><highlight class="normal"><sp/>:<sp/>48.8,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;maxTorque&quot;</highlight><highlight class="normal"><sp/>:<sp/>58.5,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;minPos&quot;</highlight><highlight class="normal"><sp/>:<sp/>-0.43644</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
</programlisting></para>
</listitem></itemizedlist>
</para>
</sect3>
<sect3 id="index_1autotoc_md11">
<title>Instructions to replace robot model</title>
<para><bold>1. model file</bold></para>
<para>a. xml file preparation</para>
<para>prepare the urdf (.urdf) file and mesh file (.stl) of the robot for adding the mujoco compiling tags <programlisting filename=".XML"><codeline><highlight class="normal">&lt;</highlight><highlight class="keywordtype">mujoco</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal">&lt;</highlight><highlight class="keywordtype">compiler</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">meshdir</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;meshes/&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">balanceinertia</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;true&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">discardvisual</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;false&quot;</highlight><highlight class="normal"><sp/>/&gt;</highlight></codeline>
<codeline><highlight class="normal">&lt;/</highlight><highlight class="keywordtype">mujoco</highlight><highlight class="normal">&gt;</highlight></codeline>
</programlisting></para>
<para>change the working directory to <computeroutput>mujoco-3.x.x/bin</computeroutput>, run the command: <programlisting filename=".shell"><codeline><highlight class="normal">./simulate</highlight></codeline>
</programlisting></para>
<para>drag the URDF file into the simulation interface, after the model displaying correctly save the XML file. You should note the path of the mesh files.</para>
<para>You can also reference the Mujoco <ulink url="https://mujoco.readthedocs.io/en/stable/XMLreference.html">documentation</ulink> to set tags like <computeroutput>compiler</computeroutput>, <computeroutput>option</computeroutput> or <computeroutput>asset</computeroutput> to customize <computeroutput>body</computeroutput>, <computeroutput>actuator</computeroutput> and <computeroutput>sensor</computeroutput> etc.</para>
<para><table rows="4" cols="2"><row>
<entry thead="yes"><para>parent label   </para>
</entry><entry thead="yes"><para>child label    </para>
</entry></row>
<row>
<entry thead="no"><para><emphasis>worldbody</emphasis>   </para>
</entry><entry thead="no"><para>define light, camera, floor and robot(inertial、joint、freejoint、geom、site、camera、light etc)    </para>
</entry></row>
<row>
<entry thead="no"><para><emphasis>actuator</emphasis>   </para>
</entry><entry thead="no"><para>define actuators (motor、position、velocity etc)    </para>
</entry></row>
<row>
<entry thead="no"><para><emphasis>sensor</emphasis>   </para>
</entry><entry thead="no"><para>define the sensors and adjust the sensors parameters like noises   </para>
</entry></row>
</table>
</para>
<para>b. replace the model</para>
<para>Take the &quot;AzureDragon robot&quot; as an example: under <emphasis>base_link</emphasis>, there are four tandem connections in parallel: the head <emphasis>Link_head_</emphasis>, the waist <emphasis>Link_waist_</emphasis>, the left arm <emphasis>Link_arm_l_</emphasis>, and the right arm <emphasis>Link_arm_r_</emphasis> branches. The left arm and right arm branches each have 7 degrees of freedom and the head branch has 2 degrees of freedom. The waist branch has 3 degrees of freedom including pitch <emphasis>Link_waist_pitch</emphasis>, roll <emphasis>Link_waist_roll</emphasis>, yaw <emphasis>Link_waist_yaw</emphasis>, etc., and the left leg and right leg branches are connected in parallel, and each leg is connected with three hip joints <emphasis>Link_hip</emphasis> and one knee joint <emphasis>Link_knee_</emphasis> in turn, two ankle joints <emphasis>Link_ankle_</emphasis> and in total 6 degrees of freedom. This completes the configuration of all the 31 degrees of freedom.</para>
<para>You can reference this configuration and try to customize your configuration <programlisting filename=".XML"><codeline><highlight class="normal">&lt;</highlight><highlight class="keywordtype">worldbody</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">body</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">name</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;base_link&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">pos</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;x<sp/>x<sp/>x&quot;</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">freejoint</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">name</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;float_base&quot;</highlight><highlight class="normal"><sp/>/&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">body</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">name</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;body1&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">pos</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;x<sp/>x<sp/>x&quot;</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">inertial</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">pos</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;x<sp/>x<sp/>x&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">quat</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;x<sp/>x<sp/>x&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">mass</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;x&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">diaginertia</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;x<sp/>x<sp/>x&quot;</highlight><highlight class="normal">/&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">joint</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">name</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;joint1&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">pos</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;0<sp/>0<sp/>0&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">axis</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;1<sp/>0<sp/>0&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">limited</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;true&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">range</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;x<sp/>x&quot;</highlight><highlight class="normal">/&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">geom</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">type</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;mesh&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">contype</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">conaffinity</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">group</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">density</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">rgba</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;x<sp/>x<sp/>x<sp/>1&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">mesh</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;body1&quot;</highlight><highlight class="normal">/&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">geom</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">type</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;mesh&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">rgba</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;x<sp/>x<sp/>x<sp/>1&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">mesh</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;body1&quot;</highlight><highlight class="normal">/&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">body</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">name</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;body2&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">pos</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;x<sp/>x<sp/>x&quot;</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>...</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">joint</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">name</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;joint2&quot;</highlight><highlight class="normal"><sp/>.../&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>...</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;/</highlight><highlight class="keywordtype">body</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;/</highlight><highlight class="keywordtype">body</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">body</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">name</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;body3&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">pos</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;x<sp/>x<sp/>x&quot;</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>...</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">joint</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">name</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;joint3&quot;</highlight><highlight class="normal"><sp/>.../&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>...</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;/</highlight><highlight class="keywordtype">body</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;/</highlight><highlight class="keywordtype">body</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal">&lt;/</highlight><highlight class="keywordtype">worldbody</highlight><highlight class="normal">&gt;</highlight></codeline>
</programlisting></para>
<para>In this case, two branches are connected in parallel under <emphasis>base_link</emphasis>, one branch consists of <emphasis>body1</emphasis> and <emphasis>body2</emphasis> in series, and the other branch consists of <emphasis>body3</emphasis>. If the robot has a floating base, add the free joint <emphasis>freejoint</emphasis> under <emphasis>body</emphasis> named <emphasis>base_link</emphasis> above. If the robot is a fixed base, remove the <emphasis>freejoint</emphasis> . Optionally, <emphasis>freejoint</emphasis> can be masked out during the model configuration phase, if desired.</para>
<para>This project sets actuator for each of the 31 joints. <programlisting filename=".XML"><codeline><highlight class="normal">&lt;</highlight><highlight class="keywordtype">actuator</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">motor</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">name</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;motor1&quot;</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">joint</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;joint1&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">gear</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;x&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">ctrllimited</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;true&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">ctrlrange</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;x<sp/>x&quot;</highlight><highlight class="normal">/&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>...</highlight></codeline>
<codeline><highlight class="normal">&lt;/</highlight><highlight class="keywordtype">actuator</highlight><highlight class="normal">&gt;</highlight></codeline>
</programlisting></para>
<para>The user can define the corresponding actuators at the active joints depending on the degrees of freedom of the robot.</para>
<para>The project is configured with sensors such as quaternion <emphasis>framequat</emphasis>, velocimeter <emphasis>velocimeter</emphasis>, angular velocimeter <emphasis>gyro</emphasis>, accelerometer <emphasis>accelerometer</emphasis>, which are mounted at the <emphasis>site</emphasis> already defined in the <emphasis>body</emphasis> tag, and can be added according to the needs of <emphasis>touch</emphasis>, <emphasis>force</emphasis>, <emphasis>torque</emphasis>, <emphasis>jointpos</emphasis>, <emphasis>jointvel</emphasis>, <emphasis>actuatorfrc</emphasis> and other sensors can be added as required. <programlisting filename=".XML"><codeline><highlight class="normal">&lt;</highlight><highlight class="keywordtype">sensor</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">framequat</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">name</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;xx&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">objtype</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;site&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">objname</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;imu&quot;</highlight><highlight class="normal"><sp/>/&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">velocimeter</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">name</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;xx&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">site</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;imu&quot;</highlight><highlight class="normal"><sp/>/&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">gyro</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">name</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;xx&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">site</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;imu&quot;</highlight><highlight class="normal"><sp/>/&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">accelerometer</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">name</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;xx&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">site</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;imu&quot;</highlight><highlight class="normal"><sp/>/&gt;</highlight></codeline>
<codeline><highlight class="normal">&lt;/</highlight><highlight class="keywordtype">sensor</highlight><highlight class="normal">&gt;</highlight></codeline>
</programlisting> In addition to the degree of freedom configuration, actuator configuration, sensor configuration, other more specific parameter modifications can refer to the Mojoco official <ulink url="https://mujoco.readthedocs.io/en/stable/XMLreference.html">documentation</ulink>.</para>
<para><bold>2. Control code and Mujoco interface</bold></para>
<para>Use fuction <computeroutput>mj_loadXML</computeroutput>、<computeroutput>mj_makeData</computeroutput>to get <computeroutput>mjModel</computeroutput>、<computeroutput>mjData</computeroutput> struct. You can reference the <ulink url="https://mujoco.readthedocs.io/en/stable/XMLreference.html">documentation</ulink> for more details of <computeroutput>mjModel</computeroutput>、<computeroutput>mjData</computeroutput>、<computeroutput>mjOption</computeroutput>. <programlisting filename=".c"><codeline><highlight class="normal">mjModel*<sp/>mj_model<sp/>=<sp/>mj_loadXML(</highlight><highlight class="stringliteral">&quot;../Models/xxx.xml&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>error,<sp/>1000);</highlight></codeline>
<codeline><highlight class="normal">mjData*<sp/>mj_data<sp/>=<sp/>mj_makeData(mj_model);</highlight></codeline>
</programlisting></para>
<para><computeroutput>mj_model-&gt;nv</computeroutput> is the dimension of generalized velocity coordinate, i.e. the linear velocity, angular velocity of the floating base, and the velocity of the 31 joints of the rotational type. The variables related to the degrees of freedom in the program framework of the project are corresponding to <computeroutput>mj_model-&gt;nv-6</computeroutput>, and the dynamics library will automatically get the dimensions of the degrees of freedom of the robot according to the URDF, where all the dimension information are defined. Thus users don&apos;t have to modify it in the program manually.</para>
<para>As the access to the addresses of <emphasis>body</emphasis>, <emphasis>joint</emphasis>, <emphasis>motor</emphasis> and other components of this project relies on querying the name string and locking the address, when a component is modified, it will not affect the data reading and writing of other <emphasis>body</emphasis>, <emphasis>joint</emphasis>, and provide convenience for modifying the model compared to the direct indexing number. When modifying the control parameters of a certain degree of freedom in the model, you only need to modify the <computeroutput>JointName</computeroutput> of <emphasis>MJ_Interface.h</emphasis>, the <computeroutput>motorName</computeroutput> of <emphasis>Pin_KinDyn.h</emphasis>, the <computeroutput>motorName</computeroutput> of <emphasis>PVT_Ctr.h</emphasis>, and the variables corresponding to the name of a certain degree of freedom in the <emphasis>JointCtrConfig.json</emphasis> file. For example, to modify the stiffness of <computeroutput>J_waist_pitch</computeroutput>, you need to modify <computeroutput>J_waist_pitch</computeroutput> and the corresponding PD parameter in <emphasis>JointCtrConfig.json</emphasis>, and the name of <computeroutput>J_waist_pitch</computeroutput> corresponds to the <emphasis>joint name</emphasis>, <emphasis>motor name</emphasis> in the xml file.</para>
<para>The sensor data address is also accessed by querying the name string to find the address, adding or deleting sensors can be done by modifying the corresponding sensor name in <emphasis>MJ_Interface.h</emphasis>.</para>
</sect3>
</sect2>
</sect1>
<sect1 id="index_1autotoc_md12">
<title>References</title>
<para>[1] D. Kim, J. D. Carlo, B. Katz, G. Bledt, S. Kim, Highly dynamic quadruped locomotion via whole-body impulse control and model predictive control. arXiv:1909.06586 (2019).</para>
<para>[2] Kim D, Jorgensen S J, Lee J, et al. Dynamic locomotion for passive-ankle biped robots and humanoids using whole-body locomotion control. arXiv:1901.08100 (2020).</para>
<para>[3] Di Carlo J, Wensing P M, Katz B, et al. Dynamic locomotion in the mit cheetah 3 through convex model-predictive control[C]//2018 IEEE/RSJ international conference on intelligent robots and systems (IROS). IEEE, 2018: 1-9.</para>
</sect1>
<sect1 id="index_1autotoc_md13">
<title>Citation</title>
<para><programlisting filename=".Java"><codeline><highlight class="normal">@software{Robot2024OpenLoong,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>author<sp/>=<sp/>{Humanoid<sp/>Robot<sp/>(Shanghai)<sp/>Co.,<sp/>Ltd},</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>title<sp/>=<sp/>{{OpenLoong-DynamicsControl:<sp/>Motion<sp/>control<sp/>framework<sp/>of<sp/>humanoid<sp/>robot<sp/>based<sp/>on<sp/><ref refid="classMPC" kindref="compound">MPC</ref><sp/>and<sp/>WBC}},</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>url<sp/>=<sp/>{https:</highlight><highlight class="comment">//gitee.com/panda_23/openloong-dyn-control.git},</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>year<sp/>=<sp/>{2024}</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
</sect1>
<sect1 id="index_1autotoc_md14">
<title>Contact us</title>
<para>Developers are welcome to participate in the optimization and improvement of this code base!</para>
<para>You can comment on existing content, give feedback on issues, contribute your original content, etc. If you have any questions or suggerstions, please contact <ulink url="mailto:web@openloong.org.cn">web@openloong.org.cn</ulink> </para>
</sect1>
    </detaileddescription>
    <location file="doc/mainpage.md"/>
  </compounddef>
</doxygen>
