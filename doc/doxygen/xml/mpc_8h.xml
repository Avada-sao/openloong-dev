<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="mpc_8h" kind="file" language="C++">
    <compoundname>mpc.h</compoundname>
    <includes local="no">iostream</includes>
    <includes local="no">Eigen/Dense</includes>
    <includes refid="data__bus_8h" local="yes">data_bus.h</includes>
    <includes local="yes">qpOASES.hpp</includes>
    <includedby refid="mpc_8cpp" local="yes">mpc.cpp</includedby>
    <includedby refid="jump__mpc_8cpp" local="yes">jump_mpc.cpp</includedby>
    <includedby refid="walk__mpc__wbc_8cpp" local="yes">walk_mpc_wbc.cpp</includedby>
    <incdepgraph>
      <node id="6">
        <label>iomanip</label>
      </node>
      <node id="7">
        <label>qpOASES.hpp</label>
      </node>
      <node id="1">
        <label>mpc.h</label>
        <link refid="mpc_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>data_bus.h</label>
        <link refid="data__bus_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>Eigen/Dense</label>
      </node>
      <node id="5">
        <label>vector</label>
      </node>
      <node id="2">
        <label>iostream</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>mpc.h</label>
        <link refid="mpc_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>walk_mpc_wbc.cpp</label>
        <link refid="walk__mpc__wbc_8cpp_source"/>
      </node>
      <node id="3">
        <label>jump_mpc.cpp</label>
        <link refid="jump__mpc_8cpp_source"/>
      </node>
      <node id="2">
        <label>mpc.cpp</label>
        <link refid="mpc_8cpp_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classMPC" prot="public">MPC</innerclass>
      <sectiondef kind="var">
      <memberdef kind="variable" id="mpc_8h_1a9a0dddb0bd761877092f9fb0f348b5c6" prot="public" static="no" mutable="no">
        <type>const uint16_t</type>
        <definition>const uint16_t mpc_N</definition>
        <argsstring></argsstring>
        <name>mpc_N</name>
        <initializer>= 10</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="algorithm/mpc.h" line="15" column="17" bodyfile="algorithm/mpc.h" bodystart="15" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="mpc_8h_1acf076a4f921873b11b5d30cc00b1bb3c" prot="public" static="no" mutable="no">
        <type>const uint16_t</type>
        <definition>const uint16_t ch</definition>
        <argsstring></argsstring>
        <name>ch</name>
        <initializer>= 3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="algorithm/mpc.h" line="16" column="17" bodyfile="algorithm/mpc.h" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="mpc_8h_1aebe83f3c6c24f8961dbcdfb378347a3f" prot="public" static="no" mutable="no">
        <type>const uint16_t</type>
        <definition>const uint16_t nx</definition>
        <argsstring></argsstring>
        <name>nx</name>
        <initializer>= 12</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="algorithm/mpc.h" line="17" column="17" bodyfile="algorithm/mpc.h" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="mpc_8h_1a7779d9854876f5ffd282a26bba3b1b43" prot="public" static="no" mutable="no">
        <type>const uint16_t</type>
        <definition>const uint16_t nu</definition>
        <argsstring></argsstring>
        <name>nu</name>
        <initializer>= 13</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="algorithm/mpc.h" line="18" column="17" bodyfile="algorithm/mpc.h" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="mpc_8h_1a5a6a4d572faf67b836ac0004f0c14ccb" prot="public" static="no" mutable="no">
        <type>const uint16_t</type>
        <definition>const uint16_t ncfr_single</definition>
        <argsstring></argsstring>
        <name>ncfr_single</name>
        <initializer>= 4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="algorithm/mpc.h" line="20" column="17" bodyfile="algorithm/mpc.h" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="mpc_8h_1a41342f8dc4d515b812a0549774825118" prot="public" static="no" mutable="no">
        <type>const uint16_t</type>
        <definition>const uint16_t ncfr</definition>
        <argsstring></argsstring>
        <name>ncfr</name>
        <initializer>= ncfr_single*2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="algorithm/mpc.h" line="21" column="17" bodyfile="algorithm/mpc.h" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="mpc_8h_1aa611efa62818c027151e7b64e88830cd" prot="public" static="no" mutable="no">
        <type>const uint16_t</type>
        <definition>const uint16_t ncstxya</definition>
        <argsstring></argsstring>
        <name>ncstxya</name>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="algorithm/mpc.h" line="23" column="17" bodyfile="algorithm/mpc.h" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="mpc_8h_1ac53ecda5b463e02e483a079ad83954d1" prot="public" static="no" mutable="no">
        <type>const uint16_t</type>
        <definition>const uint16_t ncstxy_single</definition>
        <argsstring></argsstring>
        <name>ncstxy_single</name>
        <initializer>= ncstxya*4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="algorithm/mpc.h" line="24" column="17" bodyfile="algorithm/mpc.h" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="mpc_8h_1aaeb029de4d9f92a61884df533a5853a3" prot="public" static="no" mutable="no">
        <type>const uint16_t</type>
        <definition>const uint16_t ncstxy</definition>
        <argsstring></argsstring>
        <name>ncstxy</name>
        <initializer>= ncstxy_single*2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="algorithm/mpc.h" line="25" column="17" bodyfile="algorithm/mpc.h" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="mpc_8h_1a216f103b28666a9f1a7caffe96153e1f" prot="public" static="no" mutable="no">
        <type>const uint16_t</type>
        <definition>const uint16_t ncstza</definition>
        <argsstring></argsstring>
        <name>ncstza</name>
        <initializer>= 2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="algorithm/mpc.h" line="27" column="17" bodyfile="algorithm/mpc.h" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="mpc_8h_1abb23534c86bc2087b6370023e252d532" prot="public" static="no" mutable="no">
        <type>const uint16_t</type>
        <definition>const uint16_t ncstz_single</definition>
        <argsstring></argsstring>
        <name>ncstz_single</name>
        <initializer>= ncstza*4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="algorithm/mpc.h" line="28" column="17" bodyfile="algorithm/mpc.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="mpc_8h_1adff1b93779a9e8e7230001e684290e39" prot="public" static="no" mutable="no">
        <type>const uint16_t</type>
        <definition>const uint16_t ncstz</definition>
        <argsstring></argsstring>
        <name>ncstz</name>
        <initializer>= ncstz_single*2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="algorithm/mpc.h" line="29" column="17" bodyfile="algorithm/mpc.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="mpc_8h_1afbe0e57fe479cf9f50c66aa873372df6" prot="public" static="no" mutable="no">
        <type>const uint16_t</type>
        <definition>const uint16_t nc</definition>
        <argsstring></argsstring>
        <name>nc</name>
        <initializer>= ncfr + ncstxy + ncstz</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="algorithm/mpc.h" line="30" column="17" bodyfile="algorithm/mpc.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment">This<sp/>is<sp/>part<sp/>of<sp/>OpenLoong<sp/>Dynamics<sp/>Control,<sp/>an<sp/>open<sp/>project<sp/>for<sp/>the<sp/>control<sp/>of<sp/>biped<sp/>robot,</highlight></codeline>
<codeline lineno="3"><highlight class="comment">Copyright<sp/>(C)<sp/>2024<sp/>Humanoid<sp/>Robot<sp/>(Shanghai)<sp/>Co.,<sp/>Ltd,<sp/>under<sp/>Apache<sp/>2.0.</highlight></codeline>
<codeline lineno="4"><highlight class="comment">Feel<sp/>free<sp/>to<sp/>use<sp/>in<sp/>any<sp/>purpose,<sp/>and<sp/>cite<sp/>OpenLoong-Dynamics-Control<sp/>in<sp/>any<sp/>style,<sp/>to<sp/>contribute<sp/>to<sp/>the<sp/>advancement<sp/>of<sp/>the<sp/>community.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>&lt;https://atomgit.com/openloong/openloong-dyn-control.git&gt;</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>&lt;web@openloong.org.cn&gt;</highlight></codeline>
<codeline lineno="7"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;Eigen/Dense&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;data_bus.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;qpOASES.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/><sp/>mpc_N<sp/>=<sp/>10;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/><sp/>ch<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/><sp/>nx<sp/>=<sp/>12;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/><sp/>nu<sp/>=<sp/>13;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/><sp/>ncfr_single<sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/><sp/>ncfr<sp/>=<sp/>ncfr_single*2;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/><sp/>ncstxya<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/><sp/>ncstxy_single<sp/>=<sp/>ncstxya*4;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/><sp/>ncstxy<sp/>=<sp/>ncstxy_single*2;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/><sp/>ncstza<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/><sp/>ncstz_single<sp/>=<sp/>ncstza*4;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/><sp/>ncstz<sp/>=<sp/>ncstz_single*2;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/><sp/>nc<sp/>=<sp/>ncfr<sp/>+<sp/>ncstxy<sp/>+<sp/>ncstz;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="classMPC" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classMPC" kindref="compound">MPC</ref>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classMPC" kindref="compound">MPC</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dtIn);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>set_weight(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>u_weight,<sp/>Eigen::MatrixXd<sp/>L_diag,<sp/>Eigen::MatrixXd<sp/>K_diag);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>cal();</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>dataBusRead(<ref refid="structDataBus" kindref="compound">DataBus</ref><sp/>&amp;Data);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>dataBusWrite(<ref refid="structDataBus" kindref="compound">DataBus</ref><sp/>&amp;Data);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>enable();</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>disable();</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>get_ENA();</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>copy_Eigen_to_real_t(qpOASES::real_t*<sp/>target,<sp/>Eigen::MatrixXd<sp/>source,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nRows,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nCols);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>EN<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//single<sp/>rigid<sp/>body<sp/>model</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Matrix&lt;double,nx,nx&gt;<sp/><sp/><sp/>Ac[mpc_N],<sp/>A[mpc_N];</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Matrix&lt;double,nx,nu&gt;<sp/><sp/><sp/>Bc[mpc_N],<sp/>B[mpc_N];</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Matrix&lt;double,nx,1&gt;<sp/><sp/><sp/><sp/>Cc,<sp/>C;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Matrix&lt;double,nx*mpc_N,nx&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Aqp;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Matrix&lt;double,nx*mpc_N,nx*mpc_N&gt;<sp/><sp/><sp/>Aqp1;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Matrix&lt;double,nx*mpc_N,nu*mpc_N&gt;<sp/><sp/><sp/>Bqp1;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Matrix&lt;double,nx*mpc_N,nu*ch&gt;<sp/><sp/><sp/><sp/><sp/><sp/>Bqp;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Matrix&lt;double,nx*mpc_N,1&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Cqp1;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Matrix&lt;double,nx*mpc_N,1&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Cqp;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Matrix&lt;double,nu*ch,1&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Ufe;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Matrix&lt;double,nu,1&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Ufe_pre;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Matrix&lt;double,nx*mpc_N,1&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Xd;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Matrix&lt;double,nx,1&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>X_cur;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Matrix&lt;double,nx,1&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>X_cal;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Matrix&lt;double,nx,1&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>X_cal_pre;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Matrix&lt;double,nx,1&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dX_cal;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Matrix&lt;double,Eigen::Dynamic,<sp/>Eigen::Dynamic&gt;<sp/><sp/><sp/><sp/>L;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Matrix&lt;double,nu*ch,<sp/>nu*ch&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>K,<sp/>M;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>alpha;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Matrix&lt;double,nu*ch,<sp/>nu*ch&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>H;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Matrix&lt;double,1,<sp/>nu*ch&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Matrix&lt;double,nu*ch,1&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u_low,<sp/>u_up;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Matrix&lt;double,nc*ch,<sp/>nu*ch&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>As;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Matrix&lt;double,nc*ch,1&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bs;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>max[6],<sp/>min[6];</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>m,<sp/>g,<sp/>miu,<sp/>delta_foot[4];</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Matrix&lt;double,3,1&gt;<sp/><sp/><sp/>pCoM;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Matrix&lt;double,6,1&gt;<sp/><sp/><sp/>pf2com,<sp/>pf2comd,<sp/>pe;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Matrix&lt;double,6,1&gt;<sp/><sp/><sp/>pf2comi[mpc_N];</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Matrix&lt;double,3,3&gt;<sp/><sp/><sp/>Ic;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Matrix&lt;double,3,3&gt;<sp/><sp/><sp/>R_curz[mpc_N];</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Matrix&lt;double,3,3&gt;<sp/><sp/><sp/>R_cur;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Matrix&lt;double,3,3&gt;<sp/><sp/><sp/>R_w2f,<sp/>R_f2w;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>legStateCur;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>legStateNext;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>legState[10];</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/>dt;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//qpOASES</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>qpOASES::QProblem<sp/>QP;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>qpOASES::real_t<sp/>qp_H[nu*ch<sp/>*<sp/>nu*ch];</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>qpOASES::real_t<sp/>qp_As[nc*ch<sp/>*<sp/>nu*ch];</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>qpOASES::real_t<sp/>qp_c[nu*ch];</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>qpOASES::real_t<sp/>qp_lbA[nc*ch];</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>qpOASES::real_t<sp/>qp_ubA[nc*ch];</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>qpOASES::real_t<sp/>qp_lu[nu*ch];</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>qpOASES::real_t<sp/>qp_uu[nu*ch];</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>qpOASES::int_t<sp/>nWSR=100;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>qpOASES::real_t<sp/>cpu_time=0.1;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>qpOASES::real_t<sp/>xOpt_iniGuess[nu*ch];</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>qpStatus,<sp/>last_nWSR,<sp/>last_cpuTime;</highlight></codeline>
<codeline lineno="108"><highlight class="normal">};</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="algorithm/mpc.h"/>
  </compounddef>
</doxygen>
